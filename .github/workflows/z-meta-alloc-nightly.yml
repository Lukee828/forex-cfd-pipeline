name: Meta Allocator Nightly

on:
  workflow_dispatch:
  schedule:
    - cron: "10 2 * * *"  # 02:10 UTC daily

permissions:
  contents: read

env:
  PYTHONPATH: ${{ github.workspace }}/src
  AF_SKIP_MT5: "1"

jobs:
  nightly:
    runs-on: ubuntu-latest
    timeout-minutes: 10
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Install minimal deps
        shell: bash
        run: |
          set -e
          python -m pip install -U pip
          pip install --only-binary=:all: numpy
          pip install pandas pyyaml
          pip install -r .github/ci-requirements.txt || true

      - name: Ensure outdir + fallback metrics
        shell: bash
        run: |
          set -e
          mkdir -p artifacts/allocations configs
          if [ ! -f configs/meta_metrics.json ]; then
            printf '{"TF":{"sharpe":1.2,"dd":0.06},"MR":{"sharpe":1.0,"dd":0.05},"VOL":{"sharpe":0.8,"dd":0.04}}' > configs/meta_metrics.json
          fi

      - name: Run meta allocator via file (runpy)
        shell: bash
        run: |
          set -e
          python - <<'PY'
          import sys, pathlib, runpy
          src = pathlib.Path('src').resolve()
          sys.path.insert(0, str(src))
          # call the CLI by file path to avoid -m import issues on CI
          sys.argv = [
              'cli_meta_alloc.py','--mode','ewma',
              '--metrics','configs/meta_metrics.json',
              '--outdir','artifacts/allocations','--write-latest'
          ]
          runpy.run_path('src/alpha_factory/cli_meta_alloc.py', run_name='__main__')
          PY
          ls -l artifacts/allocations

      - name: Emit targets (zeros demo)
        shell: bash
        run: |
          set -e
          python - <<'PY'
          import sys
          sys.path.insert(0, 'src')
          from alpha_factory.cli_targets import main as targets_main
          argv = [
            '--alloc-dir','artifacts/allocations',
            '--assets','EURUSD','GBPUSD','USDJPY',
            '--cap','0.9','--per-asset-cap','0.5',
            '--out','artifacts/targets/latest.csv'
          ]
          targets_main(argv)
          PY
          ls -l artifacts/targets || true

      - name: Upload allocations
        uses: actions/upload-artifact@v4
        with:
          name: nightly-allocations
          path: artifacts/allocations/*_alloc.csv
          if-no-files-found: error
          retention-days: 7

      - name: Upload targets
        uses: actions/upload-artifact@v4
        with:
          name: nightly-targets
          path: artifacts/targets/**
          if-no-files-found: error
          retention-days: 7
