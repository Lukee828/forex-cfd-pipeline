name: Tests (pytest)
on:
  pull_request:
    branches: [ "main" ]
  workflow_dispatch:

defaults:
  run:
    shell: pwsh

jobs:
  test:
    runs-on: ubuntu-latest
    env:
      AF_SKIP_MT5: '1'
      PYTHONPATH: ${{ github.workspace }}:${{ github.workspace }}/src
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Install deps
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt -c .github/constraints-ci.txt
          if ($LASTEXITCODE -ne 0) { Write-Host 'Ignoring constraints install failure'; $global:LASTEXITCODE = 0 }
          pip install pytest pytest-cov -c .github/constraints-ci.txt

      - name: Run pytest (smoke)
        run: pytest -q --maxfail=1 --disable-warnings tests/ci_smoke_test.py

      # --- Meta Allocator smoke: always export, even if pytest failed ---
      - name: Export allocations (demo)
  if: always()
  shell: bash
  run: |
    python - <<'PY'
import time, pathlib, traceback, sys
ts = time.strftime('%Y%m%d_%H%M%S')
outdir = pathlib.Path('artifacts/allocations'); outdir.mkdir(parents=True, exist_ok=True)
csv = outdir / f'{ts}_alloc.csv'
try:
    from alpha_factory.meta_allocator import MetaAllocator, AllocatorConfig
    metrics = {'TF': {'sharpe': 1.2, 'dd': 0.06},
               'MR': {'sharpe': 1.0, 'dd': 0.05},
               'VOL': {'sharpe': 0.8, 'dd': 0.04}}
    w = MetaAllocator(AllocatorConfig()).allocate(metrics)
    csv.write_text('Sleeve,Weight\n' + '\n'.join(f'{k},{v}' for k,v in w.items()), encoding='utf-8')
    print('wrote', csv)
except Exception:
    err = outdir / f'{ts}_alloc_error.txt'
    err.write_text('EXPORT_FAILED\\n' + traceback.format_exc(), encoding='utf-8')
    # Always produce a minimal CSV so artifact upload finds a file
    csv.write_text('Sleeve,Weight\nERROR,0', encoding='utf-8')
    print('wrote', csv, 'with ERROR; see', err)
    sys.exit(0)
PYthon - <<'PY'
import time, pathlib, traceback, sys
ts = time.strftime('%Y%m%d_%H%M%S')
outdir = pathlib.Path('artifacts/allocations'); outdir.mkdir(parents=True, exist_ok=True)
csv = outdir / f'{ts}_alloc.csv'
try:
    from alpha_factory.meta_allocator import MetaAllocator, AllocatorConfig
    metrics = {'TF': {'sharpe': 1.2, 'dd': 0.06},
               'MR': {'sharpe': 1.0, 'dd': 0.05},
               'VOL': {'sharpe': 0.8, 'dd': 0.04}}
    w = MetaAllocator(AllocatorConfig()).allocate(metrics)
    csv.write_text('Sleeve,Weight\n' + '\n'.join(f'{k},{v}' for k,v in w.items()), encoding='utf-8')
    print('wrote', csv)
except Exception:
    err = outdir / f'{ts}_alloc_error.txt'
    err.write_text('EXPORT_FAILED\\n' + traceback.format_exc(), encoding='utf-8')
    # Always produce a minimal CSV so artifact upload finds a file
    csv.write_text('Sleeve,Weight\nERROR,0', encoding='utf-8')
    print('wrote', csv, 'with ERROR; see', err)
    sys.exit(0)
PYthon - <<'PY'
import time, pathlib
from alpha_factory.meta_allocator import MetaAllocator, AllocatorConfig
metrics = {'TF': {'sharpe': 1.2, 'dd': 0.06},
           'MR': {'sharpe': 1.0, 'dd': 0.05},
           'VOL': {'sharpe': 0.8, 'dd': 0.04}}
w = MetaAllocator(AllocatorConfig()).allocate(metrics)
ts = time.strftime('%Y%m%d_%H%M%S')
outdir = pathlib.Path('artifacts/allocations'); outdir.mkdir(parents=True, exist_ok=True)
csv = outdir / f'{ts}_alloc.csv'
csv.write_text('Sleeve,Weight\n' + '\n'.join(f'{k},{v}' for k,v in w.items()), encoding='utf-8')
print('wrote', csv)
PY

      - name: Upload allocation CSVs
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: allocations
          path: artifacts/allocations/*.csv
          if-no-files-found: warn
          retention-days: 7

      - name: Export allocations (resilient)
        if: always()
        run: |
          @'
          import os, sys, time, pathlib, traceback
          ts = time.strftime('%Y%m%d_%H%M%S')
          outdir = pathlib.Path('artifacts/allocations'); outdir.mkdir(parents=True, exist_ok=True)
          csv = outdir / f"{ts}_alloc.csv"
          err = outdir / f"{ts}_alloc_error.txt"
          try:
              # Try real allocator (if available on runner)
              from alpha_factory.meta_allocator import MetaAllocator, AllocatorConfig
              metrics = {
                  'TF':  {'sharpe': 1.2, 'dd': 0.06},
                  'MR':  {'sharpe': 1.0, 'dd': 0.05},
                  'VOL': {'sharpe': 0.8, 'dd': 0.04},
              }
              w = MetaAllocator(AllocatorConfig()).allocate(metrics)
          except Exception as e:
              # Fallback: equal weights + write error trace for debugging
              traceback.print_exc()
              err.write_text(traceback.format_exc(), encoding='utf-8')
              keys = ['TF','MR','VOL']
              w = {k: 1/len(keys) for k in keys}
          # Always emit a CSV so upload has something to collect
          csv.write_text('Sleeve,Weight\\n' + '\\n'.join(f"{k},{v}" for k,v in w.items()), encoding='utf-8')
          print("wrote", csv)
          '@ | python -
      - name: Upload allocation CSVs
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: allocations
          path: artifacts/allocations/*.csv
          if-no-files-found: warn
          retention-days: 7
