name: Meta Allocator Smoke (dispatch)

on:
  workflow_dispatch: {}

permissions:
  contents: read

defaults:
  run:
    shell: bash

env:
  AF_SKIP_MT5: "1"
  PYTHONPATH: ${{ github.workspace }}/src

jobs:
  test:
    runs-on: ubuntu-latest
    timeout-minutes: 10
    concurrency:
      group: ${{ github.workflow }}-${{ github.ref }}
      cancel-in-progress: true
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Cache pip
        uses: actions/cache@v4
        with:
          path: ~/.cache/pip
          key: pip-${{ runner.os }}-${{ hashFiles('.github/ci-requirements.txt','requirements.txt','.github/constraints-ci.txt') }}
          restore-keys: |
            pip-${{ runner.os }}-

      - name: Install minimal deps (resilient)
        run: |
          python -m pip install -U pip
          if [ -f .github/ci-requirements.txt ]; then pip install -r .github/ci-requirements.txt || true; fi
          if [ -f requirements.txt ]; then pip install -r requirements.txt -c .github/constraints-ci.txt || true; fi
          python -m pip install pytest || true

      - name: Run pytest smoke if present
        run: |
          if [ -f tests/alpha_factory/test_meta_allocator_smoke.py ]; then
            pytest -q tests/alpha_factory/test_meta_allocator_smoke.py -vv --maxfail=1 || true
          else
            echo "No pytest smoke file found; continuing."
          fi

      - name: Export allocations (always produce a CSV)
        run: |
          python - <<'PY'
          import time, pathlib, traceback
          ts = time.strftime("%Y%m%d_%H%M%S")
          outdir = pathlib.Path("artifacts/allocations"); outdir.mkdir(parents=True, exist_ok=True)
          csv = outdir / f"{ts}_alloc.csv"
          err = outdir / f"{ts}_alloc_error.txt"
          try:
              from alpha_factory.meta_allocator import MetaAllocator, AllocatorConfig
              metrics = {"TF":{"sharpe":1.2,"dd":0.06},"MR":{"sharpe":1.0,"dd":0.05},"VOL":{"sharpe":0.8,"dd":0.04}}
              w = MetaAllocator(AllocatorConfig()).allocate(metrics)
          except Exception:
              err.write_text(traceback.format_exc(), encoding="utf-8")
              keys = ["TF","MR","VOL"]; w = {k: 1/len(keys) for k in keys}
          csv.write_text("Sleeve,Weight\n" + "\n".join(f"{k},{v}" for k,v in w.items()), encoding="utf-8")
          print("WROTE:", csv)
          PY

      - name: Upload allocation CSVs
        uses: actions/upload-artifact@v4
        with:
          name: allocations
          path: artifacts/allocations/*.csv
          if-no-files-found: warn
          retention-days: 7
