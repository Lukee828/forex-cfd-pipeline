$ErrorActionPreference = 'Stop';
$docPath = 'docs/HOOKS_OVERVIEW.md';
$stamp   = Get-Date -Format 'yyyy-MM-dd HH:mm:ss';
New-Item -ItemType Directory -Force -Path (Split-Path -LiteralPath $docPath) | Out-Null;
$lines = @();
$lines += '# Pre-Commit / Pre-Push Automation Overview';
$lines += '';
$lines += '## Stages';
$lines += '';
$lines += '| Stage | Purpose | Hooks | When |';
$lines += '|------|---------|-------|------|';
$lines += '| **pre-commit** | Formatting, linting, and manifest/state writers. | `black-local`, `ruff-local`, `end-of-file-fixer`, `trailing-whitespace`, `update-manifest`, `update-state-hash` | Before every `git commit` |';
$lines += '| **pre-push**   | Validation, audit, and risk guards.               | `verify-manifest`, `audit-state`, `handoff-validate`, `risk-governor` | Before every `git push` |';
$lines += '';
$lines += '---';
$lines += '';
$lines += '## Flow Summary';
$lines += 'Commit → format / lint / fixers / manifest / state-hash';
$lines += 'Push   → verify manifest / audit / handoff / risk governor';
$lines += '';
$lines += '---';
$lines += '';
$lines += '## Hook Script Locations';
$lines += 'All hook scripts live under `tools/` and are PowerShell 7 only.';
$lines += '';
$lines += '---';
$lines += ('_Last regenerated: ' + $stamp + ' (Local)_');
$content = $lines -join "`n";
Set-Content -LiteralPath $docPath -Encoding UTF8 -Value $content -NoNewline;
Write-Host '✅ Generated ' -NoNewline; Write-Host $docPath -ForegroundColor Green;
